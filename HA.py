import tkinter as tk
import pyautogui
from time import sleep
import os
import sys
import shutil
from tkinter import ttk
from tkinter import messagebox


try:
    url = "https://github.com/hazem589799/Hazem589799/archive/refs/heads/main.zip"
    local_zip_path = "update.zip"
    new_program_path = "Hazem589799-main/HA.py"
                
                # تحميل الملف المضغوط
    response = requests.get(url)
    with open(local_zip_path, 'wb') as file:
        file.write(response.content)
                
                # فك ضغط الملف
    with zipfile.ZipFile(local_zip_path, 'r') as zip_ref:
                    zip_ref.extractall()
                
                # تحويل الملف إلى exe
    subprocess.call([
                    'pyinstaller', '--onefile', '--distpath', '.', '--workpath', '.', '--specpath', '.', new_program_path
                ])
                
                # اسم الملف التنفيذي الجديد
    exe_file = "HA.exe"
                
                # الحصول على مسار الملف الأصلي
    original_path = os.path.abspath(__file__)
    original_dir = os.path.dirname(original_path)
                
                # المسار الجديد للملف التنفيذي
    new_exe_path = os.path.join(original_dir, exe_file)
                
                # حذف النسخة القديمة
    if os.path.isfile(new_exe_path):
        os.remove(new_exe_path)
                
                # نقل النسخة الجديدة إلى المسار الأصلي
    shutil.move(os.path.join('.', exe_file), new_exe_path)
                
            # حذف الملف المضغوط والتحديث
    os.remove(local_zip_path)
    shutil.rmtree('Hazem589799-main')
            
            # إعادة تشغيل البرنامج بالنسخة الجديدة
    subprocess.call([new_exe_path])
    self.root.destroy()
    
except Exception as e:
    messagebox.showerror("خطأ", f"حدث خطأ أثناء تحديث البرنامج: {e}")


def show():
    print(pyautogui.countdown(3))
    sleep(5)
    sho = pyautogui.position()
    lbl2 = tk.Label(text=sho , fg="blue" , font=("Arial" , 20 ))
    lbl2.pack(pady=14)
    sleep(5)
    sho = pyautogui.position()
    lbl2 = tk.Label(text=sho , fg="blue" , font=("Arial" , 20 ))
    lbl2.pack(pady=14)

def strto():
    pyautogui.click(1220 , 737)
    sleep(1)
    pyautogui.press('enter')
    sleep(0.5)
    pyautogui.press('enter')
    sleep(0.5)
    pyautogui.press('tab')
    pyautogui.press('enter')
    pyautogui.press('win')
    sleep(0.5)
    pyautogui.press('win')
    sleep(0.5)
    pyautogui.hotkey('win' , '2')
    sleep(0.5)
    pyautogui.click(986 , 58)
    sleep(0.5)
    pyautogui.click(793 , 75)
    sleep(3)
    pyautogui.click(1024 , 430)
    sleep(0.5)
    pyautogui.write("doaa.abdelhay")
    pyautogui.press('enter')
    pyautogui.write("d.abdelhay")
    pyautogui.press('enter')
def close_o():
    pyautogui.click(1220 , 737)
    sleep(1)
    pyautogui.press('enter')
    sleep(0.5)
    pyautogui.press('enter')
    sleep(0.5)
    pyautogui.press('tab')
    pyautogui.press('enter')
    pyautogui.press('win')
    sleep(0.5)
    pyautogui.press('win')
def sign():
    pyautogui.click(1020 ,431)
    pyautogui.write("doaa.abdelhay")
    pyautogui.press('enter')
    pyautogui.write("d.abdelhay")
    pyautogui.press('enter')
def esnad():
    while True:
        pyautogui.hotkey('win' , '3')
        sleep(1)
        pyautogui.press('down')   
        pyautogui.hotkey('ctrl' , 'c')
        sleep(0.5)
        pyautogui.keyDown('win')
        pyautogui.press('2')
        sleep(0.1)
        pyautogui.press('2')
        pyautogui.keyUp('win')
        sleep(1.2)
        pyautogui.press('down')
        sleep(0.5)
        pyautogui.press('enter')
        sleep(0.5)
        pyautogui.hotkey('ctrl' , 'v')
        sleep(1)
        pyautogui.press('enter')
        sleep(0.5)
        pyautogui.press('enter')
        sleep(0.5)
        pyautogui.press('down')\

def un():
    sleep(2)
    pyautogui.click(1101 , 541)
    sleep(2)
    pyautogui.write(u'hguk,hk ydv ,hqp ,hgihjt ydv ljhp h;ev lk lvm')
    sleep(1)
    pyautogui.doubleClick(854 , 475)
    sleep(1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('down')
    sleep(0.1)
    pyautogui.press('enter')
    sleep(1)
    pyautogui.press('tab')
    sleep(0.5)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.hotkey('alt' , 'down')
    sleep(0.2)
    pyautogui.press('down')
    sleep(0.2)
    pyautogui.press('enter')
    sleep(0.2)
    pyautogui.hotkey('ctrl' , 's')
    sleep(0.2)
    pyautogui.press('enter')
    sleep(0.2)
    pyautogui.click(1217 , 142)
    sleep(0.2)
    pyautogui.press('f11')
    sleep(0.2)


    


def print_printer():
    pyautogui.hotkey('win' , '1')
    sleep(0.5)
    pyautogui.click(201 , 6)
    sleep(0.5)
    pyautogui.move(966 , 240)
    sleep(0.5)
    pyautogui.scroll(40000)
    sleep(1)
    pyautogui.click(1072 , 224)
    sleep(0.5)
    pyautogui.click(675 , 540)
    sleep(0.8)
    pyautogui.keyDown('left')
    sleep(1)
    pyautogui.keyUp('left')
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.2)
    pyautogui.press('enter')
    sleep(0.1)
    pyautogui.click(160 , 187)
    sleep(3)
    pyautogui.click(927 , 136)
    sleep(0.1)
    pyautogui.move(720 , 428)
    sleep(3.5)
    pyautogui.hotkey('ctrl' , 'p')
    sleep(3.8)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.1)
    pyautogui.press('tab')
    sleep(0.3)
    pyautogui.press('enter')
    sleep(0.3)
    pyautogui.hotkey('alt' , 'f4')
    sleep(0.1)
    pyautogui.press('Esc')
    pyautogui.press('Esc')
    while True:
        pyautogui.press('right')
        pyautogui.hotkey('win' , '1')
        sleep(0.5)
        pyautogui.click(201 , 6)
        sleep(0.5)
        pyautogui.move(966 , 240)
        sleep(0.5)
        pyautogui.scroll(40000)
        sleep(1)
        pyautogui.click(1072 , 224)
        sleep(0.5)
        pyautogui.click(675 , 540)
        sleep(0.8)
        pyautogui.keyDown('left')
        sleep(1)
        pyautogui.keyUp('left')
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.2)
        pyautogui.press('enter')
        sleep(0.1)
        pyautogui.click(160 , 187)
        sleep(3)
        pyautogui.click(927 , 136)
        sleep(0.1)
        pyautogui.move(720 , 428)
        sleep(3.5)
        pyautogui.hotkey('ctrl' , 'p')
        sleep(3.8)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.1)
        pyautogui.press('tab')
        sleep(0.3)
        pyautogui.press('enter')
        sleep(0.3)
        pyautogui.hotkey('alt' , 'f4')
        sleep(0.1)
        pyautogui.press('Esc')
        pyautogui.press('Esc')
        
def close_app():
    wd.destroy()

def switch():
    def dam1():
        a = Txtbx.get()
        b = Txtbx2.get() # type: ignore
        c = Txtbx3.get()
        d = Txtbx4.get()
        if c == d :
            sleep(1)
            pyautogui.countdown(1)
            pyautogui.click(972 , 141)
            sleep(0.2)
            pyautogui.press('tab')
            sleep(0.5)
            pyautogui.press('tab')
            sleep(0.3)
            pyautogui.hotkey('alt' , 'down')
            sleep(0.2)
            pyautogui.press('up')
            sleep(0.2)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.press('tab')
            sleep(0.2)
            pyautogui.press('tab')
            sleep(0.2)
            pyautogui.write(a)
            pyautogui.write(b)
            sleep(0.2)
            pyautogui.press('enter')
            sleep(0.2)
            pyautogui.write(c)
            sleep(0.2)
            pyautogui.press('enter')
            sleep(0.5)
            pyautogui.write(d)
            sleep(0.2)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.click(849 , 314)
            sleep(1)
            pyautogui.click(1037 , 334)
            sleep(1)
            pyautogui.write(a)
            sleep(3)
            pyautogui.press('enter')
            sleep(2)
            pyautogui.doubleClick(654 , 542)
            sleep(3)
            pyautogui.click(1101 , 541)
            sleep(3)
            pyautogui.write("jl hgjv;df ,hgjaydg ,hgavp ,hujlh] hgqlhk fjhvdo hghkjh[")
            sleep(1)
            pyautogui.doubleClick(854 , 475)
            sleep(1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.doubleClick(1090 , 240)
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            def yes():
                pyautogui.hotkey('ctrl' , 's')
                sleep(0.5)
                pyautogui.press('enter')
                sleep(0.5)
                pyautogui.doubleClick(306 , 640 )
                sleep(3)
                pyautogui.press('enter')
                confirm.destroy()
            def no(): 
                confirm.destroy()

            def taqr():
                pyautogui.doubleClick(1101 , 541)
                sleep(1)
                pyautogui.hotkey('ctrl' , 'a')
                sleep(0.5)
                pyautogui.keyDown('del')
                sleep(1)
                pyautogui.keyUp('del')
                sleep(0.5)
                pyautogui.write("jl hgjv;df ,hgjaydg ,hgavp ,hujlh] hgqlhk fjhvdo hghkjh[")    

            confirm = tk.Tk()
            confirm.title("تاكيد اذا كنت تريد المتابعه فى الحفظ ")
            confirm.geometry("230x100")
            lab1 = tk.Label(confirm , text="هل تريد المتابعه " , fg="red" , bg="yellow" , font=("Arial" , 20))
            lab1.pack()
            but = tk.Button(confirm , text="نعم" ,command=yes ,  fg="white" , bg="blue")
            but.pack()
            but.place(x=30 , y=40)
            but2 = tk.Button(confirm , text="لا" ,command=no , fg="white" , bg="red" )
            but2.pack()
            but2.place(x=100 , y=40)
            but3 = tk.Button(confirm , text="كتابة التقرير " , command=taqr ,fg="green" , bg="green")
            but3.pack()
            but3.place(x=160 , y=40)
            confirm.mainloop()
            





        else:
            sleep(1)
            pyautogui.countdown(1)
            pyautogui.click(972 , 141)
            sleep(0.2)
            pyautogui.press('tab')
            sleep(0.5)
            pyautogui.press('tab')
            sleep(0.3)
            pyautogui.hotkey('alt' , 'down')
            sleep(0.2)
            pyautogui.press('up')
            sleep(0.2)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('up')
            sleep(0.1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.press('tab')
            sleep(0.2)
            pyautogui.press('tab')
            sleep(0.2)
            pyautogui.write(a)
            pyautogui.write(b)
            sleep(0.2)
            pyautogui.press('enter')
            sleep(0.2)
            pyautogui.write(c)
            sleep(0.2)
            pyautogui.press('enter')
            sleep(0.5)
            pyautogui.write(d)
            sleep(0.2)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.click(849 , 314)
            sleep(1)
            pyautogui.click(1037 , 334)
            sleep(1)
            pyautogui.write(a)
            sleep(1)
            pyautogui.press('enter')
            pyautogui.doubleClick(654 , 542)
            sleep(2)
            pyautogui.click(1101 , 541)
            sleep(3)
            pyautogui.write("jl hgjv;df ,hgjaydg ,hgavp ,hujlh] hgqlhk")
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.doubleClick(854 , 475)
            sleep(1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('down')
            sleep(0.1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.doubleClick(1090 , 240)
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            sleep(1)
            pyautogui.press('enter')
            sleep(1)
            def yes():
                pyautogui.keyDown('ctrl')
                sleep(0.5)
                pyautogui.press('s')
                sleep(0.1)
                pyautogui.keyUp('ctrl')
                sleep(0.5)
                pyautogui.press('enter')
                sleep(0.5)
                pyautogui.doubleClick(306 , 640 )
                sleep(3)
                pyautogui.press('enter')
                for x  in range(3):
                    pyautogui.press('enter')

                confirm.destroy()
            def no(): 
                confirm.destroy()

            def taqr():
                pyautogui.doubleClick(1101 , 541)
                sleep(1)
                pyautogui.hotkey('ctrl' , 'a')
                sleep(0.5)
                pyautogui.keyDown('del')
                sleep(1)
                pyautogui.keyUp('del')
                sleep(0.5)
                if a==b:
                    pyautogui.write("jl hgjv;df ,hgjaydg ,hgavp ,hujlh] hgqlhk fjhvdo hghkjh[") 
                else:
                    pyautogui.write("jl hgjv;df ,hgjaydg ,hgavp ,hujlh] hgqlhk")    

            confirm = tk.Tk()
            confirm.title("تاكيد اذا كنت تريد المتابعه فى الحفظ ")
            confirm.geometry("230x100")
            lab1 = tk.Label(confirm , text="هل تريد المتابعه " , fg="red" , bg="yellow" , font=("Arial" , 20))
            lab1.pack()
            but = tk.Button(confirm , text="نعم" ,command=yes ,  fg="white" , bg="blue")
            but.pack()
            but.place(x=30 , y=40)
            but2 = tk.Button(confirm , text="لا" ,command=no , fg="white" , bg="red" )
            but2.pack()
            but2.place(x=100 , y=40)
            but3 = tk.Button(confirm , text="كتابة التقرير " , command=taqr ,fg="green" , bg="yellow")
            but3.pack()
            but3.place(x=160 , y=40)
            confirm.mainloop()

        Wd2.destroy()    
        wd.deiconify()
    def sww2():
        wd.deiconify()
        Wd2.destroy()   
    wd.withdraw()
    Wd2 = tk.Tk()
    Wd2.title("بلاغات داخل الضمان لم يتخطى 6 شهور")
    Wd2.geometry("400x350")
    llbl = tk.Label(Wd2 , text="pnc" ,fg='red' , font=("Arial" ,20))
    llbl.pack()
    Txtbx = tk.Entry(Wd2 , fg='red')
    Txtbx.pack()
    llbl2 = tk.Label(Wd2 , text="serial number" ,fg='red' , font=("Arial" ,20))
    llbl2.pack()
    Txtbx2 = tk.Entry(Wd2 , fg='red')
    Txtbx2.pack()
    llbl3 = tk.Label(Wd2 , text="تاريخ الانتاج 1" ,fg='red' , font=("Arial" ,20))
    llbl3.pack()
    Txtbx3 = tk.Entry(Wd2 , fg='red')
    Txtbx3.pack()
    llbl4 = tk.Label(Wd2 , text="تاريخ الانتاج 2" ,fg='red' , font=("Arial" ,20))
    llbl4.pack()
    Txtbx4 = tk.Entry(Wd2 , fg='red')
    Txtbx4.pack()
    btn_d = tk.Button(Wd2 , text="تقفيل" , command=dam1 , fg="blue" , bg="yellow")
    btn_d.pack(pady=10)
    btn_g =tk.Button(Wd2 , text="رجوع" , command=sww2 , fg="white" , bg="green")
    btn_g.pack(pady=5)
    Wd2.deiconify()






wd = tk.Tk()
wd.title("Zanussi programming ")
wd.geometry("230x1200")
lb1 = tk.Label(text="شركة زانوسى" , fg="red" , font=("Arial" , 20))
lb1.pack(pady="10")
#show position button
btnsho = tk.Button(wd , text="show", command=show , fg="green")
btnsho.pack(pady=12)
#open oracle button
btn_o = tk.Button(wd , text="فتح الاوراكل" , command=strto , fg="blue" , bg="yellow")
btn_o.pack(pady=10)
#close vpn button
btn_c = tk.Button(wd , text="vpn غلق" , command=close_o , fg="blue" , bg="yellow")
btn_c.pack(pady=10)
#esnad button
btn_c = tk.Button(wd , text="اسناد" , command=esnad , fg="blue" , bg="yellow")
btn_c.pack(pady=10)
btn_d = tk.Button(wd , text="تسجيل" , command=sign , fg="blue" , bg="yellow")
btn_d.pack(pady=10)
btn_e =tk.Button(text="طباعة الضمانات " , command=print_printer , fg="blue" , bg="yellow" )
btn_e.pack(pady=10)
btn_e = tk.Button(text="تقفيل بلاغات داخل الضمان  " , command=switch ,fg="blue" , bg="yellow" )
btn_e.pack(pady=10)
btn_h = tk.Button(wd , text="الغير منفذ" , command=un)
btn_h.pack(pady=5)
btn_f = tk.Button(text="غلق البرنامج" , command=close_app ,fg="white" , bg="red" )
btn_f.pack(pady=10)
wd.mainloop()
